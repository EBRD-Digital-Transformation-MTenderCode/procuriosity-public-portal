{"version":3,"sources":["accordion.js"],"names":["Accordion","options","element","getElementById","openTab","titleClass","contentClass","onClick","e","el","style","oneOpen","className","indexOf","closeAll","target","nextElementSibling","height","scrollHeight","opacity","item","forEach","call","querySelectorAll","getTarget","n","classList","add","addEventListener","open","close","destroy","removeEventListener","document","accordion"],"mappings":"aAgBA,IAAIA,UAAY,SAAUC,GACtB,IAAIC,EAAqC,iBAApBD,EAAQC,QAD7BF,SAAYG,eAAZH,EAAsBC,SAASA,EAAAC,QAC3BA,EAAUD,EAAOA,QAEjBG,EAAUH,EAAQG,UAFtB,EAKIC,EAAa,qBACbC,EAAe,uBAgCnB,SAASC,EAAQC,GA6Bb,IAAAC,EAGOC,GA3BM,IAATC,EAAAA,OAASC,UAAAC,QAAAR,KAILM,GACXG,IAmBGL,EApBOD,EAAEO,OAAOC,mBAuBTN,EAAMO,EAATC,aAEA,QAAGR,EAAMS,MAAAA,QAAT,KAAAV,EAAAC,MAAAO,QACGR,EAAAC,MAAAO,OAAAA,EAAA,KACAP,EAAMO,MAATE,QAAA,IAEHV,EAAAC,MAAAO,OAAA,EACJR,EAAAC,MAAAS,QAAA,IArBOC,SAAKV,IAFT,GAAAW,QAAAC,KAAApB,EAAAqB,iBAAA,IAAAjB,GAAA,SAAAc,GAIHA,EAAAV,MAAAO,OAAA,EAEDG,EAAAV,MAAAS,QAAA,IA2BC,SAAAK,EAAAC,GAED,OAAAvB,EAAAqB,iBAAA,IAAAjB,GAAAmB,EAAA,GAQI,SAAIV,EAASS,GAAb,IAAIT,EAASS,EAAUC,GACnBV,IACIJ,GAASG,IACPC,EAAOE,MAAbA,OAA4BF,EAACG,aAAoB,GAAjD,KACMH,EAAOI,MAAAA,QAAb,GA2BP,MA/GWC,GAAKM,QAAAA,KAALxB,EAAmBG,iBAAnB,UACKW,SAAAA,GAGbI,EAAAM,UAAAC,IAAAtB,GAHQe,EAAKJ,mBAAmBU,UAAUC,IAAIrB,KAI9CJ,EAAQ0B,iBAAiB,QAASrB,GAQjCO,IAFGV,GACAyB,EAAKzB,GAmGZ,CAGGyB,KAAMA,EADVC,MAlBA,SAAeL,GAAf,IAASK,EAASN,EAAAC,GAGVV,IAAAA,EAAQL,MAAAO,OAAA,EACFF,EAAOE,MAAbE,QAAA,IAeAY,QALR,WACI7B,EAAQ8B,oBAAoB,QAASzB,MAQ5C,GAxID0B,SAAA9B,eAAA,aA2II,IAAI+B,UAAY,IAAIlC,UAAU,CAD9BiC,QAAS9B,YACL+B,QAAS,EACThC,SAAS","file":"accordion.js","sourcesContent":["/**\n * @fileOverview\n * @author Zoltan Toth\n * @version 1.1.0\n */\n\n/**\n * @description\n * Vanilla JavaScript Accordion\n *\n * @class\n * @param {(string|Object)} options.element - HTML id of the accordion container\n *         or the DOM element.\n * @param {number} [options.openTab=1] - Start the accordion with this item opened.\n * @param {boolean} [options.oneOpen=false] - Only one tab can be opened at a time.\n */\nvar Accordion = function (options) {\n    var element = typeof options.element === 'string' ?\n        document.getElementById(options.element) : options.element,\n        openTab = options.openTab,\n        oneOpen = options.oneOpen || false,\n\n        titleClass = 'js-Accordion-title',\n        contentClass = 'js-Accordion-content';\n\n    render();\n\n    /**\n     * Initial rendering of the accordion.\n     */\n    function render() {\n        // attach classes to buttons and containers\n        [].forEach.call(element.querySelectorAll('button'),\n            function (item) {\n                item.classList.add(titleClass);\n                item.nextElementSibling.classList.add(contentClass);\n            });\n\n        // attach only one click listener\n        element.addEventListener('click', onClick);\n\n        // accordion starts with all tabs closed\n        closeAll();\n\n        // sets the open tab - if defined\n        if (openTab) {\n            open(openTab);\n        }\n    }\n\n    /**\n     * Handles clicks on the accordion.\n     *\n     * @param {object} e - Element the click occured on.\n     */\n    function onClick(e) {\n        if (e.target.className.indexOf(titleClass) === -1) {\n            return;\n        }\n\n        if (oneOpen) {\n            closeAll();\n        }\n\n        toggle(e.target.nextElementSibling);\n    }\n\n    /**\n     * Closes all accordion tabs.\n     */\n    function closeAll() {\n        [].forEach.call(element.querySelectorAll('.' + contentClass), function (item) {\n            item.style.height = 0;\n            item.style.opacity = 0;\n        });\n    }\n\n    /**\n     * Toggles corresponding tab for each title clicked.\n     *\n     * @param {object} el - The content tab to show or hide.\n     */\n    function toggle(el) {\n        // getting the height every time in case\n        // the content was updated dynamically\n        var height = el.scrollHeight;\n\n        if (el.style.height === '0px' || el.style.height === '') {\n            el.style.height = height + 'px';\n            el.style.opacity = 1;\n        } else {\n            el.style.height = 0;\n            el.style.opacity = 0;\n        }\n    }\n\n\n    /**\n     * Returns the corresponding accordion content element by index.\n     *\n     * @param {number} n - Index of tab to return\n     */\n    function getTarget(n) {\n        return element.querySelectorAll('.' + contentClass)[n - 1];\n    }\n\n    /**\n     * Opens a tab by index.\n     *\n     * @param {number} n - Index of tab to open.\n     *\n     * @public\n     */\n    function open(n) {\n        var target = getTarget(n);\n        if (target) {\n            if (oneOpen) closeAll();\n            target.style.height = target.scrollHeight + 25 + 'px';\n            target.style.opacity = 1;\n        }\n    }\n\n    /**\n     * Closes a tab by index.\n     *\n     * @param {number} n - Index of tab to close.\n     *\n     * @public\n     */\n    function close(n) {\n        var target = getTarget(n);\n\n        if (target) {\n            target.style.height = 0;\n            target.style.opacity = 0;\n        }\n    }\n\n    /**\n     * Destroys the accordion.\n     *\n     * @public\n     */\n    function destroy() {\n        element.removeEventListener('click', onClick);\n    }\n\n    return {\n        open: open,\n        close: close,\n        destroy: destroy\n    };\n};\n\nif (document.getElementById(\"accordion\")) {\n    var accordion = new Accordion({\n        element: \"accordion\",    // ID of the accordion container\n        openTab: 1,              // [optional] Accordion tab to start opened with. All tabs closed if not set.\n        oneOpen: true            // [optional] Allow one accordion tab only to be opened at a time\n    });\n}\n;"]}